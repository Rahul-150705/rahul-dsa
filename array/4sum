/* similar to 3sum just add another for loop to count first two numbers and include duplicate for that also*/
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n=nums.length;
        Arrays.sort(nums);
        List<List<Integer>> a=new ArrayList<>();
        for(int i=0;i<n-3;i++)
        {   
            if(i>0 && nums[i]==nums[i-1]) continue;
            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1 && nums[j]==nums[j-1])continue;
                int p=j+1;
                int q=n-1;
                while(p<q)
                {
                   long sum=(long) nums[i]+nums[j]+nums[p]+nums[q];
                if(sum==target)
                {
                   a.add(Arrays.asList(nums[i],nums[j],nums[p],nums[q]));
                   while(p<q && nums[p]==nums[p+1]) p++;
                    while(p<q && nums[q]==nums[q-1])q--;
                   p++;
                   q--;

                }
                else if(sum<target)
                {
                    p++;
                }
                else
                {
                    q--;
                }
                }
            }
        }
        return a;
    }
}
