import java.util.*;
class Solution {
    public List<List<Integer>> threeSum(int[] nums){
        Arrays.sort(nums);
        int sum=0;
        List<List<Integer>> x = new ArrayList<>(); // use this to add the elements to the list  
        for(int i=0;i<nums.length;i++)
        { 
            int left=i+1;
            int right=nums.length-1;
            if (i > 0 && nums[i] == nums[i - 1]) continue; // to skip duplicate element 
            while(left<right)
            {
                sum=nums[i]+nums[left]+nums[right];
                if(sum<0)
                {
                    left++;
                }
                else if(sum==0)
                {
                    x.add(Arrays.asList(nums[i],nums[left],nums[right]));
                    left++;
                    right--;
                    while(left<right && nums[left]==nums[left-1]) left++; // to skip duplicate 
                    while(left<right && nums[right]==nums[right+1]) right--;
                }
                else
                {
                    right--;
                }
            }
        }
        return x;
    }
} // u can also use hashset but time complexity will increase use hashset if time complexity does not matter to u just change the list to hashset and skip all duplicates if and while loop condition 
