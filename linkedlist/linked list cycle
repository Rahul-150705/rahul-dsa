/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution { 
    public boolean hasCycle(ListNode head) { 
     
     
     /*HashSet<ListNode> set=new HashSet<>();
     for(ListNode i=head;i!=null;i=i.next){
        if(set.contains(i)) return true;
        set.add(i);
    }
    return false;
    */
     ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast) return true;
        }
        return false;
    }
}
