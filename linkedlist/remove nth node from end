/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */ 

 /* u can also use stack apprach for this time complexity is same for both space differs */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode x=new ListNode(0);
        x.next=head; // to keep the track of head so that we can call it 
        ListNode slow=x;
        ListNode fast=x;
        for(int i=0;i<n;i++)
        {
            fast = fast.next;
        }
        while(fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next;
        }
        slow.next=slow.next.next;
        return x.next;
        
    }
}
